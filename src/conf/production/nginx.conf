##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {

  server_name events.schloss-gaienhofen.de;
	# SSL configuration
	#
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
  ssl_certificate /etc/ssl/certs/cert.pem;
  ssl_certificate_key /etc/ssl/private/cert.key;


  add_header Strict-Transport-Security "max-age=15768000" always;

	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	#include snippets/snakeoil.conf;

	# root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;

    # to switch: comment
    # - line 103 (root ...)
    # - line 113 (try_files ...)
    # uncomment follownig lines (proxy_...)
    proxy_pass http://localhost:8080;
    proxy_set_header Host      $host;
    proxy_set_header X-Real-IP $remote_addr;
    # ende
    add_header X-Cache-Status $upstream_cache_status;
    proxy_cache STATIC;
    proxy_cache_revalidate on;
    proxy_cache_lock on;
    proxy_cache_valid 200 1s;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

	}

}


